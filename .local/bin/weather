#!/bin/sh

# Displays todays precipication chance (☔) and daily low (❄) and high (🌞).
# Usually intended for the statusbar.

# If we have internet, get a weather report from wttr.in and store it locally.
# You could set up a shell alias to view the full file in a pager in the
# terminal if desired. This function will only be run once a day when needed.
weatherreport="$HOME/.local/share/weatherreport"

# The test if our forcecast is updated to the day. If it isn't download a new
# weather report from wttr.in with the above function.
[ "$(stat -c %y "$weatherreport" 2>/dev/null | cut -d' ' -f1)" = "$(date '+%Y-%m-%d')" ] ||
	{ printf "Last updated `date \"+%j %H:%M\"`\n\n" > "$weatherreport"
	curl -sf "wttr.in/${LOCATION}" >> "$weatherreport" || exit 1; }

# Some very particular and terse stream manipulation. We get the maximum
# precipication chance and the daily high and low from the downloaded file and
# display them with coresponding emojis. If weather report is empty, print a
# question mark.
[ -z "$(cat ~/.local/share/weatherreport | head -n-3)" ] && printf "❓" && exit
printf "%s" "$(sed '18q;d' "$weatherreport" | grep -wo "[0-9]*%" | sort -rn | sed "s/^/☔/g;1q" | tr -d '\n')"
sed '15q;d' "$weatherreport" | grep -o "m\\([-+]\\)*[0-9]\\+" | sort -n -t 'm' -k 2n | sed -e 1b -e '$!d' | tr '\n|m' ' ' | awk '{print " ❄" $1 "°","🌞" $2 "°"}'


